package com.example.shitzbank.data

import com.example.shitzbank.domain.model.Account
import com.example.shitzbank.domain.model.AccountBrief
import com.example.shitzbank.domain.model.Category
import com.example.shitzbank.domain.model.TransactionResponse
import com.example.shitzbank.domain.repository.Repository
import java.time.LocalDateTime

class MockRepository : Repository {

    private val mockTransactions = listOf(
        TransactionResponse(
            id = 1,
            account = AccountBrief(
                id = 1,
                name = "–û—Å–Ω–æ–≤–Ω–æ–π —Å—á—ë—Ç",
                balance = 1000.00,
                currency = "‚ÇΩ"
            ),
            category = Category(
                id = 1,
                title = "–ó–∞—Ä–ø–ª–∞—Ç–∞",
                icon = "üí∞",
                isIncome = true
            ),
            amount = 500.00,
            transactionDate = LocalDateTime.parse("2025-06-12T09:00:00"),
            comment = "–ó–∞—Ä–ø–ª–∞—Ç–∞ –∑–∞ –∏—é–Ω—å",
            createdAt = LocalDateTime.parse("2025-06-12T09:01:00"),
            updatedAt = LocalDateTime.parse("2025-06-12T09:01:00")
        ),
        TransactionResponse(
            id = 2,
            account = AccountBrief(
                id = 1,
                name = "–û—Å–Ω–æ–≤–Ω–æ–π —Å—á—ë—Ç",
                balance = 950.00,
                currency = "‚ÇΩ"
            ),
            category = Category(
                id = 2,
                title = "–ü—Ä–æ–¥—É–∫—Ç—ã",
                icon = "üõí",
                isIncome = false
            ),
            amount = 50.00,
            transactionDate = LocalDateTime.parse("2025-06-12T12:30:00"),
            comment = "–ü–æ–∫—É–ø–∫–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ",
            createdAt = LocalDateTime.parse("2025-06-12T12:31:00"),
            updatedAt = LocalDateTime.parse("2025-06-12T12:31:00")
        ),
        TransactionResponse(
            id = 3,
            account = AccountBrief(
                id = 1,
                name = "–û—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç",
                balance = 5000.00,
                currency = "‚ÇΩ"
            ),
            category = Category(
                id = 3,
                title = "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
                icon = "üéÆ",
                isIncome = false
            ),
            amount = 300.00,
            transactionDate = LocalDateTime.parse("2025-06-11T20:15:00"),
            comment = "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ Netflix",
            createdAt = LocalDateTime.parse("2025-06-11T20:16:00"),
            updatedAt = LocalDateTime.parse("2025-06-11T20:16:00")
        ),
        TransactionResponse(
            id = 4,
            account = AccountBrief(
                id = 1,
                name = "–û—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç",
                balance = 4800.00,
                currency = "‚ÇΩ"
            ),
            category = Category(
                id = 4,
                title = "–ö–∞—Ñ–µ",
                icon = "‚òï",
                isIncome = false
            ),
            amount = 200.00,
            transactionDate = LocalDateTime.parse("2025-06-12T10:00:00"),
            comment = "–ó–∞–≤—Ç—Ä–∞–∫ –≤ –∫–∞—Ñ–µ",
            createdAt = LocalDateTime.parse("2025-06-12T10:01:00"),
            updatedAt = LocalDateTime.parse("2025-06-12T10:01:00")
        ),

        TransactionResponse(
            id = 5,
            account = AccountBrief(
                id = 1,
                name = "–û—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç",
                balance = 4600.00,
                currency = "‚ÇΩ"
            ),
            category = Category(
                id = 5,
                title = "–§—Ä–∏–ª–∞–Ω—Å",
                icon = "üßë‚Äçüíª",
                isIncome = true
            ),
            amount = 1000.00,
            transactionDate = LocalDateTime.parse("2025-06-12T15:30:00"),
            comment = "–û–ø–ª–∞—Ç–∞ –∑–∞ –ø—Ä–æ–µ–∫—Ç",
            createdAt = LocalDateTime.parse("2025-06-12T15:31:00"),
            updatedAt = LocalDateTime.parse("2025-06-12T15:31:00")
        ),

        TransactionResponse(
            id = 6,
            account = AccountBrief(
                id = 1,
                name = "–û—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç",
                balance = 4550.00,
                currency = "‚ÇΩ"
            ),
            category = Category(
                id = 6,
                title = "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
                icon = "üöó",
                isIncome = false
            ),
            amount = 50.00,
            transactionDate = LocalDateTime.parse("2025-06-12T18:00:00"),
            comment = null,
            createdAt = LocalDateTime.parse("2025-06-12T18:01:00"),
            updatedAt = LocalDateTime.parse("2025-06-12T18:01:00")
        )

    )

    override suspend fun getAccounts(): List<Account> {
        return listOf(
            Account(
                id = 1,
                userId = 1,
                name = "–û—Å–Ω–æ–≤–Ω–æ–π —Å—á—ë—Ç",
                balance = 100000.0,
                currency = "‚ÇΩ",
                createdAt = LocalDateTime.now().minusDays(10),
                updatedAt = LocalDateTime.now()
            )
        )
    }

    override suspend fun getCategories(): List<Category> {
        return listOf(
            Category(id = 1, title = "–ó–∞—Ä–ø–ª–∞—Ç–∞", icon = "üí∞", isIncome = true),
            Category(id = 2, title = "–§—Ä–∏–ª–∞–Ω—Å", icon = "üßë‚Äçüíª", isIncome = true),
            Category(id = 3, title = "–ü–æ–¥–∞—Ä–æ–∫", icon = "üéÅ", isIncome = true),
            Category(id = 4, title = "–ü—Ä–æ–¥—É–∫—Ç—ã", icon = "üçé", isIncome = false),
            Category(id = 5, title = "–ö–∞—Ñ–µ", icon = "‚òï", isIncome = false),
            Category(id = 6, title = "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", icon = "üöó", isIncome = false),
            Category(id = 7, title = "–û–¥–µ–∂–¥–∞", icon = "üëï", isIncome = false),
            Category(id = 8, title = "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", icon = "üéÆ", isIncome = false),
            Category(id = 9, title = "–ú–µ–¥–∏—Ü–∏–Ω–∞", icon = "üíä", isIncome = false),
            Category(id = 10, title = "–ê—Ä–µ–Ω–¥–∞", icon = "üè†", isIncome = false),
            Category(id = 11, title = "–†–µ–º–æ–Ω—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã", icon = "–†–ö", isIncome = false)
        )
    }

    override suspend fun getTodayTransactionsByAccount(
        accountId: Int,
    ): List<TransactionResponse> {
        return mockTransactions.filter {
            it.account.id == accountId
        }
    }
}